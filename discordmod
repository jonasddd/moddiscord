<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Apply to Become a Moderator - Elite Discord Community</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/phosphor-icons@1.4.2/src/index.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #5865F2;
            --primary-dark: #4752C4;
            --secondary: #FF73FA;
            --bg-dark: #0F0F23;
            --bg-darker: #08081A;
            --text-light: #E4E4E7;
            --text-muted: #A1A1AA;
            --glass-bg: rgba(255, 255, 255, 0.05);
            --glass-border: rgba(255, 255, 255, 0.1);
            --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            --glow: 0 0 40px rgba(88, 101, 242, 0.3);
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
            color: var(--text-light);
            line-height: 1.6;
            overflow-x: hidden;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .animate-on-scroll {
            opacity: 0;
            transform: translateY(30px);
            transition: all 0.8s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        .animate-on-scroll.visible {
            opacity: 1;
            transform: translateY(0);
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            padding: 1rem 2rem;
            transition: all 0.3s ease;
        }

        nav.scrolled {
            background: rgba(15, 15, 35, 0.9);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--glass-border);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            letter-spacing: -0.02em;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
            list-style: none;
        }

        .nav-links a {
            color: var(--text-muted);
            text-decoration: none;
            font-weight: 400;
            transition: color 0.3s ease;
            font-size: 0.95rem;
        }

        .nav-links a:hover {
            color: var(--text-light);
        }

        .burger {
            display: none;
            flex-direction: column;
            cursor: pointer;
            gap: 4px;
        }

        .burger span {
            width: 25px;
            height: 2px;
            background: var(--text-light);
            transition: 0.3s;
        }

        .mobile-menu {
            position: fixed;
            top: 0;
            right: -100%;
            width: 300px;
            height: 100vh;
            background: rgba(15, 15, 35, 0.95);
            backdrop-filter: blur(20px);
            padding: 2rem;
            transition: right 0.3s ease;
            z-index: 999;
        }

        .mobile-menu.active {
            right: 0;
        }

        .mobile-menu .close {
            text-align: right;
            margin-bottom: 2rem;
            cursor: pointer;
            font-size: 1.5rem;
        }

        .mobile-menu a {
            display: block;
            padding: 1rem 0;
            color: var(--text-light);
            text-decoration: none;
            border-bottom: 1px solid var(--glass-border);
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 0 2rem;
            background: radial-gradient(circle at 50% 50%, rgba(88, 101, 242, 0.1) 0%, transparent 50%);
            animation: fadeIn 1s ease-out;
        }

        .hero-content {
            max-width: 800px;
            animation: fadeInUp 1s ease-out 0.3s both;
        }

        .hero h1 {
            font-size: clamp(3rem, 8vw, 6rem);
            font-weight: 300;
            margin-bottom: 1.5rem;
            letter-spacing: -0.04em;
            background: linear-gradient(135deg, var(--text-light) 0%, var(--primary) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .hero p {
            font-size: 1.25rem;
            color: var(--text-muted);
            margin-bottom: 3rem;
            font-weight: 300;
        }

        /* Buttons */
        .btn-primary {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem 2rem;
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            text-decoration: none;
            border-radius: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 20px rgba(88, 101, 242, 0.3);
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--glow);
        }

        /* Sections */
        .section {
            padding: 6rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .section-title {
            font-size: 2.5rem;
            font-weight: 300;
            text-align: center;
            margin-bottom: 3rem;
            letter-spacing: -0.02em;
        }

        /* Glass Cards */
        .glass-card {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 16px;
            padding: 2rem;
            box-shadow: var(--shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
        }

        /* Mission Section */
        .mission {
            text-align: center;
        }

        .mission-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .mission p {
            font-size: 1.1rem;
            color: var(--text-muted);
            margin-bottom: 2rem;
        }

        .values {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .value-item {
            text-align: center;
        }

        .value-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
        }

        /* How it Works */
        .how-it-works {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .step {
            text-align: center;
        }

        .step-number {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 1.5rem;
            font-weight: 600;
        }

        /* Form */
        .form-container {
            max-width: 600px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 2rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--text-light);
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 1rem;
            background: var(--glass-bg);
            border: 1px solid var(--glass-border);
            border-radius: 8px;
            color: var(--text-light);
            font-family: inherit;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(88, 101, 242, 0.1);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 120px;
        }

        /* FAQ */
        .faq-item {
            margin-bottom: 1.5rem;
        }

        .faq-question {
            background: var(--glass-bg);
            border: 1px solid var(--glass-border);
            border-radius: 8px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .faq-question:hover {
            background: rgba(255, 255, 255, 0.08);
        }

        .faq-answer {
            padding: 0 1.5rem;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease, padding 0.3s ease;
            color: var(--text-muted);
        }

        .faq-item.active .faq-answer {
            max-height: 200px;
            padding: 1.5rem;
        }

        /* Testimonials */
        .testimonials {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .testimonial {
            text-align: center;
        }

        .testimonial-avatar {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            border-radius: 50%;
            margin: 0 auto 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            font-weight: 600;
        }

        /* Footer */
        footer {
            background: var(--bg-darker);
            padding: 3rem 2rem 2rem;
            text-align: center;
            border-top: 1px solid var(--glass-border);
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
        }

        .footer-links {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .footer-links a {
            color: var(--text-muted);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-links a:hover {
            color: var(--primary);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .burger {
                display: flex;
            }

            .hero h1 {
                font-size: 3rem;
            }

            .section {
                padding: 4rem 1rem;
            }

            .values,
            .how-it-works,
            .testimonials {
                grid-template-columns: 1fr;
            }

            .footer-links {
                flex-direction: column;
                gap: 1rem;
            }
        }

        /* Success Message */
        .success-message {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            color: white;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: none;
            align-items: center;
            gap: 0.5rem;
        }

        .success-message.show {
            display: flex;
        }

        /* Discord Login */
        .discord-login {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 1rem 2rem;
            border-radius: 12px;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 20px rgba(88, 101, 242, 0.3);
            text-decoration: none;
            justify-content: center;
            width: 100%;
            margin-bottom: 2rem;
        }

        .discord-login:hover {
            transform: translateY(-2px);
            box-shadow: var(--glow);
        }

        .user-info {
            background: var(--glass-bg);
            border: 1px solid var(--glass-border);
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 2rem;
            display: none;
            align-items: center;
            gap: 1rem;
        }

        .user-info.show {
            display: flex;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--primary);
        }

        .user-details h3 {
            margin: 0;
            color: var(--text-light);
        }

        .user-details p {
            margin: 0;
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        .logout-btn {
            background: transparent;
            border: 1px solid var(--glass-border);
            color: var(--text-muted);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            margin-left: auto;
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.05);
            color: var(--text-light);
        }

        .form-disabled {
            opacity: 0.5;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav id="navbar">
        <div class="nav-container">
            <a href="#hero" class="logo">ModRecruit</a>
            <ul class="nav-links">
                <li><a href="#hero">Home</a></li>
                <li><a href="#mission">About</a></li>
                <li><a href="#how-it-works">How it Works</a></li>
                <li><a href="#apply">Apply</a></li>
                <li><a href="#faq">FAQ</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
            <div class="burger" onclick="toggleMobileMenu()">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
    </nav>

    <!-- Mobile Menu -->
    <div class="mobile-menu" id="mobileMenu">
        <div class="close" onclick="toggleMobileMenu()">✕</div>
        <a href="#hero" onclick="toggleMobileMenu()">Home</a>
        <a href="#mission" onclick="toggleMobileMenu()">About</a>
        <a href="#how-it-works" onclick="toggleMobileMenu()">How it Works</a>
        <a href="#apply" onclick="toggleMobileMenu()">Apply</a>
        <a href="#faq" onclick="toggleMobileMenu()">FAQ</a>
        <a href="#contact" onclick="toggleMobileMenu()">Contact</a>
    </div>

    <!-- Hero Section -->
    <section id="hero" class="hero">
        <div class="hero-content">
            <h1>Apply to Become a Moderator</h1>
            <p>Join our elite Discord community as a trusted moderator and help shape the future of our growing server.</p>
            <a href="#apply" class="btn-primary">
                <i class="ph-arrow-right"></i>
                Apply Now
            </a>
        </div>
    </section>

    <!-- Mission Section -->
    <section id="mission" class="section mission animate-on-scroll">
        <h2 class="section-title">Why We're Hiring Moderators</h2>
        <div class="mission-content">
            <p>Our Discord community has grown exponentially, and we're looking for dedicated, trustworthy individuals to help maintain our high standards of engagement and safety. We believe in fostering a positive environment where every member feels valued and heard.</p>
            
            <div class="values">
                <div class="glass-card">
                    <div class="value-icon">
                        <i class="ph-shield-check"></i>
                    </div>
                    <h3>Trustworthy</h3>
                    <p>We value integrity and reliability above all else</p>
                </div>
                <div class="glass-card">
                    <div class="value-icon">
                        <i class="ph-users"></i>
                    </div>
                    <h3>Community-Focused</h3>
                    <p>Passionate about building positive communities</p>
                </div>
                <div class="glass-card">
                    <div class="value-icon">
                        <i class="ph-clock"></i>
                    </div>
                    <h3>Available</h3>
                    <p>Consistent presence and responsiveness</p>
                </div>
            </div>
        </div>
    </section>

    <!-- How it Works -->
    <section id="how-it-works" class="section animate-on-scroll">
        <h2 class="section-title">How the Application Works</h2>
        <div class="how-it-works">
            <div class="glass-card step">
                <div class="step-number">1</div>
                <h3>Fill Out the Form</h3>
                <p>Complete our comprehensive application form with your Discord details, experience, and motivation.</p>
            </div>
            <div class="glass-card step">
                <div class="step-number">2</div>
                <h3>Direct Submission</h3>
                <p>Your application is sent directly to our Discord server owner for immediate review.</p>
            </div>
            <div class="glass-card step">
                <div class="step-number">3</div>
                <h3>Discord Response</h3>
                <p>Receive a response via Discord message within 48-72 hours about your application status.</p>
            </div>
        </div>
    </section>

    <!-- Application Form -->
    <section id="apply" class="section animate-on-scroll">
        <h2 class="section-title">Application Form</h2>
        <div class="form-container">
            <div class="glass-card">
                <div class="success-message" id="successMessage">
                    <i class="ph-check-circle"></i>
                    Application submitted successfully! You'll hear back from us via Discord soon.
                </div>

                <!-- Discord Login Section -->
                <div id="loginSection">
                    <button class="discord-login" onclick="loginWithDiscord()">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M20.317 4.369a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.211.375-.445.865-.608 1.249a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.249.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.369a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.89 19.89 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.372.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z"/>
                        </svg>
                        Login with Discord to Apply
                    </button>
                </div>

                <!-- User Info Display -->
                <div class="user-info" id="userInfo">
                    <img class="user-avatar" id="userAvatar" src="" alt="User Avatar">
                    <div class="user-details">
                        <h3 id="userName"></h3>
                        <p id="userTag"></p>
                    </div>
                    <button class="logout-btn" onclick="logout()">Logout</button>
                </div>
                
                <form id="applicationForm" class="form-disabled">
                    <div class="form-group">
                        <label for="discordUsername">Discord Username + Tag *</label>
                        <input type="text" id="discordUsername" name="discordUsername" placeholder="e.g., YourName#1234" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="age">Age *</label>
                        <input type="number" id="age" name="age" min="13" max="99" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="availability">Availability (Hours per week) *</label>
                        <input type="text" id="availability" name="availability" placeholder="e.g., 15-20 hours, mostly evenings EST" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="experience">Previous Moderation Experience</label>
                        <textarea id="experience" name="experience" placeholder="Describe any previous moderation experience you have, including Discord servers, forums, or other communities..."></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="motivation">Why do you want to be a moderator? *</label>
                        <textarea id="motivation" name="motivation" placeholder="Tell us about your motivation for applying and what you hope to contribute to our community..." required></textarea>
                    </div>
                    
                    <button type="submit" class="btn-primary" style="width: 100%; justify-content: center;">
                        <i class="ph-paper-plane-tilt"></i>
                        Submit Application
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section id="faq" class="section animate-on-scroll">
        <h2 class="section-title">Frequently Asked Questions</h2>
        <div class="faq-container" style="max-width: 800px; margin: 0 auto;">
            <div class="faq-item">
                <div class="faq-question" onclick="toggleFAQ(this)">
                    <span>Do I need previous moderation experience?</span>
                    <i class="ph-plus"></i>
                </div>
                <div class="faq-answer">
                    While previous experience is helpful, it's not required. We value attitude, maturity, and dedication over experience. We provide training for new moderators.
                </div>
            </div>
            
            <div class="faq-item">
                <div class="faq-question" onclick="toggleFAQ(this)">
                    <span>How soon will I hear back?</span>
                    <i class="ph-plus"></i>
                </div>
                <div class="faq-answer">
                    We aim to respond to all applications within 48-72 hours via Discord direct message. Please be patient as we review each application carefully.
                </div>
            </div>
            
            <div class="faq-item">
                <div class="faq-question" onclick="toggleFAQ(this)">
                    <span>What are the main responsibilities?</span>
                    <i class="ph-plus"></i>
                </div>
                <div class="faq-answer">
                    Moderators help maintain server rules, assist community members, manage channels, handle conflicts, and contribute to the overall positive atmosphere of our Discord server.
                </div>
            </div>
            
            <div class="faq-item">
                <div class="faq-question" onclick="toggleFAQ(this)">
                    <span>Is this a paid position?</span>
                    <i class="ph-plus"></i>
                </div>
                <div class="faq-answer">
                    This is a volunteer position. However, moderators receive special perks, recognition, and the satisfaction of contributing to an amazing community.
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials -->
    <section id="testimonials" class="section animate-on-scroll">
        <h2 class="section-title">What Our Moderators Say</h2>
        <div class="testimonials">
            <div class="glass-card testimonial">
                <div class="testimonial-avatar">A</div>
                <p>"Being a moderator here has been incredibly rewarding. The community is amazing and the team is very supportive."</p>
                <strong>- Alex, Senior Moderator</strong>
            </div>
            <div class="glass-card testimonial">
                <div class="testimonial-avatar">S</div>
                <p>"I've learned so much about community management and made great friends along the way. Highly recommend applying!"</p>
                <strong>- Sarah, Moderator</strong>
            </div>
            <div class="glass-card testimonial">
                <div class="testimonial-avatar">M</div>
                <p>"The training provided was excellent, and I felt prepared to handle any situation that came up in the server."</p>
                <strong>- Mike, Moderator</strong>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer id="contact">
        <div class="footer-content">
            <div class="footer-links">
                <a href="#hero">Home</a>
                <a href="#mission">About</a>
                <a href="https://discord.gg/your-server" target="_blank">Join Discord</a>
                <a href="#privacy">Privacy Policy</a>
                <a href="#terms">Terms of Service</a>
            </div>
            <p style="color: var(--text-muted); margin-top: 2rem;">
                © 2025 ModRecruit. Built for Discord communities.
            </p>
        </div>
    </footer>

    <script>
        // Discord OAuth Configuration
        const DISCORD_CONFIG = {
            CLIENT_ID: 'YOUR_DISCORD_BOT_CLIENT_ID_HERE', // Replace with your Discord bot client ID
            REDIRECT_URI: window.location.origin + window.location.pathname,
            WEBHOOK_URL: 'YOUR_DISCORD_WEBHOOK_URL_HERE' // Replace with your Discord webhook URL
        };

        let currentUser = null;

        // Scroll animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, observerOptions);

        document.querySelectorAll('.animate-on-scroll').forEach(el => {
            observer.observe(el);
        });

        // Navbar scroll effect
        window.addEventListener('scroll', () => {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });

        // Mobile menu toggle
        function toggleMobileMenu() {
            const mobileMenu = document.getElementById('mobileMenu');
            mobileMenu.classList.toggle('active');
        }

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // FAQ toggle
        function toggleFAQ(element) {
            const faqItem = element.parentElement;
            const icon = element.querySelector('i');
            
            faqItem.classList.toggle('active');
            
            if (faqItem.classList.contains('active')) {
                icon.className = 'ph-minus';
            } else {
                icon.className = 'ph-plus';
            }
        }

        // Discord OAuth Functions
        function loginWithDiscord() {
            const params = new URLSearchParams({
                client_id: DISCORD_CONFIG.CLIENT_ID,
                redirect_uri: DISCORD_CONFIG.REDIRECT_URI,
                response_type: 'code',
                scope: 'identify'
            });
            
            window.location.href = `https://discord.com/api/oauth2/authorize?${params}`;
        }

        async function handleDiscordCallback() {
            const urlParams = new URLSearchParams(window.location.search);
            const code = urlParams.get('code');
            
            if (code) {
                try {
                    // Exchange code for access token
                    const tokenResponse = await fetch('https://discord.com/api/oauth2/token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: new URLSearchParams({
                            client_id: DISCORD_CONFIG.CLIENT_ID,
                            client_secret: 'YOUR_DISCORD_BOT_CLIENT_SECRET', // You'll need to add this
                            code: code,
                            grant_type: 'authorization_code',
                            redirect_uri: DISCORD_CONFIG.REDIRECT_URI,
                        }),
                    });

                    const tokenData = await tokenResponse.json();
                    
                    if (tokenData.access_token) {
                        // Get user info
                        const userResponse = await fetch('https://discord.com/api/users/@me', {
                            headers: {
                                Authorization: `Bearer ${tokenData.access_token}`,
                            },
                        });

                        const userData = await userResponse.json();
                        
                        // Store user data
                        currentUser = {
                            id: userData.id,
                            username: userData.username,
                            discriminator: userData.discriminator,
                            avatar: userData.avatar,
                            tag: `${userData.username}#${userData.discriminator}`
                        };

                        // Update UI
                        updateUIForLoggedInUser();
                        
                        // Clear URL parameters
                        window.history.replaceState({}, document.title, window.location.pathname);
                    }
                } catch (error) {
                    console.error('Error during Discord authentication:', error);
                    alert('Authentication failed. Please try again.');
                }
            }
        }

        function updateUIForLoggedInUser() {
            const loginSection = document.getElementById('loginSection');
            const userInfo = document.getElementById('userInfo');
            const applicationForm = document.getElementById('applicationForm');
            const userAvatar = document.getElementById('userAvatar');
            const userName = document.getElementById('userName');
            const userTag = document.getElementById('userTag');
            const discordUsernameInput = document.getElementById('discordUsername');

            // Hide login button, show user info and enable form
            loginSection.style.display = 'none';
            userInfo.classList.add('show');
            applicationForm.classList.remove('form-disabled');

            // Set user info
            userName.textContent = currentUser.username;
            userTag.textContent = currentUser.tag;
            userAvatar.src = currentUser.avatar 
                ? `https://cdn.discordapp.com/avatars/${currentUser.id}/${currentUser.avatar}.png`
                : `https://cdn.discordapp.com/embed/avatars/${currentUser.discriminator % 5}.png`;

            // Pre-fill Discord username in form
            discordUsernameInput.value = currentUser.tag;
            discordUsernameInput.readOnly = true;
        }

        function logout() {
            currentUser = null;
            
            const loginSection = document.getElementById('loginSection');
            const userInfo = document.getElementById('userInfo');
            const applicationForm = document.getElementById('applicationForm');
            const discordUsernameInput = document.getElementById('discordUsername');

            // Show login button, hide user info and disable form
            loginSection.style.display = 'block';
            userInfo.classList.remove('show');
            applicationForm.classList.add('form-disabled');

            // Clear and enable Discord username input
            discordUsernameInput.value = '';
            discordUsernameInput.readOnly = false;

            // Reset form
            applicationForm.reset();
        }

        // Form submission
        document.getElementById('applicationForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!currentUser) {
                alert('Please login with Discord first to submit your application.');
                return;
            }
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            // Create Discord embed with user information
            const embed = {
                title: "🎯 New Moderator Application",
                color: 5865242, // Discord blue
                thumbnail: {
                    url: currentUser.avatar 
                        ? `https://cdn.discordapp.com/avatars/${currentUser.id}/${currentUser.avatar}.png`
                        : `https://cdn.discordapp.com/embed/avatars/${currentUser.discriminator % 5}.png`
                },
                fields: [
                    {
                        name: "👤 Discord User",
                        value: `<@${currentUser.id}> (${currentUser.tag})`,
                        inline: true
                    },
                    {
                        name: "🎂 Age",
                        value: data.age,
                        inline: true
                    },
                    {
                        name: "⏰ Availability",
                        value: data.availability,
                        inline: false
                    },
                    {
                        name: "📋 Previous Experience",
                        value: data.experience || "None specified",
                        inline: false
                    },
                    {
                        name: "💭 Motivation",
                        value: data.motivation,
                        inline: false
                    }
                ],
                timestamp: new Date().toISOString(),
                footer: {
                    text: "ModRecruit Application System",
                    icon_url: "https://cdn.discordapp.com/emojis/854063194603135006.png"
                }
            };

            try {
                if (DISCORD_CONFIG.WEBHOOK_URL && DISCORD_CONFIG.WEBHOOK_URL !== 'YOUR_DISCORD_WEBHOOK_URL_HERE') {
                    const response = await fetch(DISCORD_CONFIG.WEBHOOK_URL, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            content: `📋 **New moderator application received!**`,
                            embeds: [embed]
                        })
                    });

                    if (response.ok) {
                        // Show success message
                        document.getElementById('successMessage').classList.add('show');
                        this.reset();
                        
                        // Hide success message after 5 seconds
                        setTimeout(() => {
                            document.getElementById('successMessage').classList.remove('show');
                        }, 5000);
                    } else {
                        throw new Error('Failed to send webhook');
                    }
                } else {
                    // For demo purposes when webhook is not configured
                    console.log('Application data:', { user: currentUser, formData: data });
                    alert('⚠️ Webhook not configured. Please add your Discord webhook URL in the DISCORD_CONFIG object.');
                }

            } catch (error) {
                console.error('Error submitting application:', error);
                alert('There was an error submitting your application. Please try again.');
            }
        });

        // Initialize page
        window.addEventListener('load', () => {
            document.body.style.opacity = '1';
            
            // Check if we're returning from Discord OAuth
            handleDiscordCallback();
        });
        const DISCORD_CONFIG = {
    CLIENT_ID: '1374434422924771378',           // From Discord Developer Portal
    REDIRECT_URI: 'https://yoursite.com',       // Your website URL
    WEBHOOK_URL: 'https://discord.com/api/webhooks/1376200566971170999/it_7aTbzFDya5O0sRNFzMGlyi36nV9KiN9Bj93qxlTluIIVC2YAcUos0j6ACx7822KYp'     // Your Discord webhook URL
};
    </script>
</body>
</html>
